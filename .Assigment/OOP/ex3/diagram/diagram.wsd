@startuml

abstract class Candidate {
    - id: int
    - name: String
    - address: String
    - priorityLevel: int
    - count: static int
    - manageId: static set<int>
    - recycledIds: static set<int>
    --
    + Candidate()
    + Candidate(int, string, int)
    + void generateUniqueId()
    + int getId()
    + string getName()
    + string getAddress()
    + int getPriorityLevel()
    + void inputCandidate()
    + virtual string getBlock() = 0
    + virtual void detailCandidate()
    + virtual ~Candidate()
}

class CandidateA {
    - subjectCombinationA: String
    --
    + CandidateA()
    + CandidateA(int, string, string, int)
    + void detailCandidate() override
    + string getBlock() override
}

class CandidateB {
    - subjectCombinationB: String
    --
    + CandidateB()
    + CandidateB(int, string, string, int)
    + void detailCandidate() override
    + string getBlock() override
}

class CandidateC {
    - subjectCombinationC: String
    --
    + CandidateC()
    + CandidateC(int, string, string, int)
    + void detailCandidate() override
    + string getBlock() override
}

class CandidateManager {
    - listCandidates: vector<shared_ptr<Candidate>>
    --
    + void addCandidate(shared_ptr<Candidate>)
    + void displayCandidate()
    + void searchCandidateById(string)
}

Candidate <|-- CandidateA
Candidate <|-- CandidateB
Candidate <|-- CandidateC
CandidateManager o--> Candidate

@enduml
