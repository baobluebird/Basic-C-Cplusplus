@startuml

class Document{
  - idDoc: int
  - publisherName: String
  - editionNumber: int
  - count: static int
  - manageId: static set<int>
  - recycledIds: static set<int>
  + Document();
  + Document(int, string, int);
  + void generateUniqueId();
  + int getId();
  + string getPublisherName();
  + int getEditionNumber();
  + virtual string getType() = 0;
  + virtual void detailDocument() = 0;
  + virtual void inputDocument();
  + virtual ~Document();
}

class Book{
  - authorName: String
  - pageNumber: int
  + Book();
  + Book(int, string, int, string, int);
  + void detailDocument() override;
  + void inputDocument() override;
  + string getType() override;
}

class Magazine{
  - issueNumber: int
  - issueMonth: String
  + Magazine();
  + Magazine(int, string, int, int, string);
  + void detailDocument() override;
  + void inputDocument() override;
  + string getType() override;
}

class News{
  - releaseDay: int
  + News();
  + News(int, string, int, string);
  + void detailDocument() override;
  + void inputDocument() override;
  + string getType() override;
}

class DocumentManager {
  - listDocuments: vector<unique_ptr<Document>>
  + void addDocument(unique_ptr<Document> );
  + void deleteDocumentById(int);
  + void displayDocument();
  + void searchDocumentByType(string);
}

Document <|-- Book
Document <|-- Magazine
Document <|-- News
DocumentManager o--> Document : Aggregation, Directed Association
@enduml
