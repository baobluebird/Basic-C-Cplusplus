@startuml

class Employee {
  - name: String
  - age: int
  - gender: String
  - address: String
  + Employee()
  + Employee(String, int, String, String)
  + virtual void enterInformation()
  + String getName()
  + virtual void displayInformation()
  + virtual ~Employee()
}

class Worker {
  - level: int
  + Worker()
  + Worker(String, int, String, String, int)
  + void enterInformation() override
  + void displayInformation() override
}

class Engineer {
  - major: String
  + Engineer()
  + Engineer(String, int, String, String, String)
  + void enterInformation() override
  + void displayInformation() override
}

class Staff {
  - job: String
  + Staff()
  + Staff(String, int, String, String, String)
  + void enterInformation() override
  + void displayInformation() override
}

class EmployeeManager {
  - employeeList: vector<Employee*>
  + void addEmployee(Employee*)
  + void searchByName(String)
  + void displayEmployeeList()
}

Employee <|-- Worker : Generalization 
Employee <|-- Engineer : Generalization 
Employee <|-- Staff : Generalization 
EmployeeManager o--> Employee : Aggregation, Directed Association

@enduml
